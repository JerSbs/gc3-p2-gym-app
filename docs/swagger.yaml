basePath: /
definitions:
  dto.BMIResponse:
    properties:
      bmi:
        type: number
      height:
        type: string
      weight:
        type: string
      weight_category:
        type: string
    type: object
  dto.ExerciseCreateRequest:
    properties:
      description:
        type: string
      name:
        type: string
      workout_id:
        type: integer
    required:
    - description
    - name
    - workout_id
    type: object
  dto.ExerciseItem:
    properties:
      description:
        type: string
      id:
        type: integer
      name:
        type: string
    type: object
  dto.ExerciseResponse:
    properties:
      description:
        type: string
      id:
        type: integer
      name:
        type: string
      workout_id:
        type: integer
    type: object
  dto.LogCreateRequest:
    properties:
      created_at:
        description: optional or for logging timestamp
        type: string
      exercise_id:
        type: integer
      repition_count:
        type: integer
      set_count:
        type: integer
      weight:
        type: integer
    required:
    - exercise_id
    - repition_count
    - set_count
    - weight
    type: object
  dto.LogResponse:
    properties:
      exercise_id:
        type: integer
      id:
        type: integer
      repition_count:
        type: integer
      set_count:
        type: integer
      user_id:
        type: integer
      weight:
        type: integer
    type: object
  dto.LogWithExerciseResponse:
    properties:
      exercise:
        $ref: '#/definitions/dto.ExerciseItem'
      exercise_id:
        type: integer
      id:
        type: integer
      repition_count:
        type: integer
      set_count:
        type: integer
      user_id:
        type: integer
      weight:
        type: integer
    type: object
  dto.LoginRequest:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  dto.RegisterRequest:
    properties:
      email:
        type: string
      full_name:
        type: string
      height:
        type: integer
      password:
        type: string
      weight:
        type: integer
    type: object
  dto.WorkoutCreateRequest:
    properties:
      description:
        type: string
      name:
        type: string
    type: object
  dto.WorkoutDetailResponse:
    properties:
      description:
        type: string
      exercises:
        items:
          $ref: '#/definitions/dto.ExerciseItem'
        type: array
      id:
        type: integer
      name:
        type: string
    type: object
  dto.WorkoutResponse:
    properties:
      description:
        type: string
      id:
        type: integer
      name:
        type: string
      user_id:
        type: integer
    type: object
  dto.WorkoutUpdateRequest:
    properties:
      description:
        type: string
      name:
        type: string
    required:
    - description
    - name
    type: object
host: gc3-p2-gym-app-8a1fe5dad844.herokuapp.com
info:
  contact: {}
  description: RESTful API for Gym workout tracking
  title: GC3 - Gym App API
  version: "1.0"
paths:
  /api/exercises:
    post:
      consumes:
      - application/json
      description: Create a new exercise under a workout (must own the workout)
      parameters:
      - description: Exercise create payload
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.ExerciseCreateRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/dto.ExerciseResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: Forbidden
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Create exercise
      tags:
      - exercises
  /api/exercises/{id}:
    delete:
      description: Delete an exercise and its logs (only if user owns it)
      parameters:
      - description: Exercise ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: Forbidden
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Delete exercise
      tags:
      - exercises
  /api/logs:
    get:
      description: Get all logs created by the authenticated user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dto.LogWithExerciseResponse'
            type: array
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Get user logs
      tags:
      - logs
    post:
      consumes:
      - application/json
      description: Create a new log entry for an exercise (must own the exercise)
      parameters:
      - description: Log create payload
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.LogCreateRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/dto.LogResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: Forbidden
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Create exercise log
      tags:
      - logs
  /api/users:
    get:
      description: Retrieve profile of the authenticated user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Get user profile
      tags:
      - users
  /api/users/bmi:
    get:
      description: Calculate BMI using user's weight and height from DB, call external
        API
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.BMIResponse'
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Get BMI from 3rd party API
      tags:
      - Users
  /api/users/login:
    post:
      consumes:
      - application/json
      description: Authenticate user with email and password
      parameters:
      - description: User login payload
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Login user
      tags:
      - users
  /api/users/register:
    post:
      consumes:
      - application/json
      description: Create an account with full name, email, password, age
      parameters:
      - description: User registration payload
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.RegisterRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Register a new user
      tags:
      - users
  /api/workouts:
    get:
      description: Get all workouts owned by the authenticated user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dto.WorkoutResponse'
            type: array
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Get all workouts
      tags:
      - workouts
    post:
      consumes:
      - application/json
      description: Create a workout for the authenticated user
      parameters:
      - description: Workout create payload
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.WorkoutCreateRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/dto.WorkoutResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Create a new workout
      tags:
      - workouts
  /api/workouts/{id}:
    delete:
      description: Delete a workout (and all its exercises) if owned by user
      parameters:
      - description: Workout ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: Forbidden
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Delete workout
      tags:
      - workouts
    get:
      description: Get workout and all its exercises (ownership required)
      parameters:
      - description: Workout ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.WorkoutDetailResponse'
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: Forbidden
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Get workout detail
      tags:
      - workouts
    put:
      consumes:
      - application/json
      description: Update workout name and description (ownership required)
      parameters:
      - description: Workout ID
        in: path
        name: id
        required: true
        type: integer
      - description: Workout update payload
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.WorkoutUpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.WorkoutResponse'
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: Forbidden
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Update workout
      tags:
      - workouts
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
